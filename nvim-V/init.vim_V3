:set relativenumber
:set guicursor=n-v-c-i:block
:set number
:set tabstop=4
:set shiftwidth=4 
:set expandtab
:set cursorline
:set cursorcolumn
:set nowrap



call plug#begin('~/.config/nvim/plugged')


Plug 'github/copilot.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'nordtheme/vim'
Plug 'f-person/git-blame.nvim'
Plug 'sindrets/diffview.nvim'                                
Plug 'mattn/emmet-vim'
Plug 'machakann/vim-sandwich'
Plug 'https://github.com/preservim/nerdtree'
Plug 'https://github.com/vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
Plug 'https://github.com/tpope/vim-commentary' " For Commenting gcc & gc
Plug 'https://github.com/ap/vim-css-color' " CSS Color Preview
Plug 'https://github.com/rafi/awesome-vim-colorschemes' " Retro Scheme
Plug 'https://github.com/ryanoasis/vim-devicons' " Developer Icons
Plug 'https://github.com/tc50cal/vim-terminal' " Vim Terminal
Plug 'https://github.com/terryma/vim-multiple-cursors' " CTRL + N for multiple cursors
Plug 'tribela/vim-transparent'
Plug 'ThePrimegen/vim-be-good'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.8' }
" or                                , { 'branch': '0.1.x' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'lifepillar/vim-colortemplate'

" post install (yarn install | npm install) then load plugin only for editing supported files
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install --frozen-lockfile --production',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue', 'svelte', 'yaml', 'html'] }

" LSP setting 

" auto complete 
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
" barra de estado
Plug 'itchyny/lightline.vim'
Plug 'maximbaz/lightline-ale'
" AutoTyping
Plug 'jiangmiao/auto-pairs'
" IDE
Plug 'yggdroot/indentline'


" commented plugins

" schemes
" Plug 'morhetz/gruvbox'
" plug 'craftzdog/solarized-osaka.nivm'
" Plug 'bluz71/vim-nightfly-colors', { 'as': 'nightfly' }
" Plug 'bluz71/vim-moonfly-colors', { 'as': 'moonfly' }
" Plug 'NLKNguyen/papercolor-theme'
" Plug 'whatyouhide/vim-gotham'
" Plug 'ericbn/vim-solarized'
" Plug 'bettervim/yugen.nvim'

" Others
" Plug 'Exafunction/codeium.vim', { 'branch': 'main' }
" Plug 'https://github.com/neoclide/coc.vim'  " Auto Completion
" Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Plug 'sphamba/smear-cursor.nvim'

call plug#end()

" lua require('smear_cursor').enabled = true

"{
"  "craftzdog/solarized-osaka.nvim",
"  lazy = false,
"  priority = 1000,
"  opts = {},
"}

" colorscheme moonfly
" :colorscheme PaperColor
" :colorscheme solarized-osaka
" :colorscheme gotham
:colorscheme gruvbox
" :colorscheme yugen
" :colorscheme nord

 
" syntax enable
" set background=dark
" :colorscheme solarized


nnoremap <C-p> :Files<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :Telescope<CR>
inoremap kj <esc>
vnoremap kj <esc>



let g:NERDTreeDirArrowExpandable="+"
let g:NERDTreeDirArrowCollapsible="~"

:set completeopt-=preview " For No Previews

" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" airline symbols
"  for left and right sep
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

inoremap <expr> <Tab> pumvisible() ? coc#_select_confirm() : "<Tab>"

if exists('+termguicolors')
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
  endif

